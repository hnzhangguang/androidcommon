




1, context -> applicationContext
2, 静态变量 ->
3, 匿名内部类或者非静态内部类
4, Bitmap 使用后调用recycle()方法
5、单例造成的内存泄露 -> 解决方法：单例模式引用的对象的生命周期 = 应用生命周期
6, 非静态内部类 / 匿名类

1、需要手动关闭的对象没有关闭

网络、文件等流忘记关闭
手动注册广播时，退出时忘记 unregisterReceiver()
Service 执行完后忘记 stopSelf()
EventBus 等观察者模式的框架忘记手动解除注册







/////////////////////////// 解释内容 start //////////////////////////////////

静态内部类和非静态内部类之间到底有什么不同呢？下面是两者间主要的不同。
（1）内部静态类不需要有指向外部类的引用。但非静态内部类需要持有对外部类的引用。
（2）非静态内部类能够访问外部类的静态和非静态成员。静态类不能访问外部类的非静态成员。他只能访问外部类的静态成员。
（3）一个非静态内部类不能脱离外部类实体被创建，一个非静态内部类可以访问外部类的数据和方法，因为他就在外部类里面。

1. 使用静态内部类(必要时结合WeakReference,弱引用方式)

