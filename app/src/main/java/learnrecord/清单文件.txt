

清单文件
清单文件 (AndroidManifest.xml)

在 Android 系统启动应用组件之前，系统必须通过读取应用的清单文件 (AndroidManifest.xml) 确认组件存在。
您的应用必须在此文件中声明其所有组件，该文件必须位于应用项目目录的根目录中。

除了声明应用的组件外，清单文件还有许多其他作用，如：
1, 确定应用需要的任何用户权限，如互联网访问权限或对用户联系人的读取权限。
2, 根据应用使用的 API，声明应用所需的最低 API 级别。
3, 声明应用使用或需要的硬件和软件功能，如相机、蓝牙服务或多点触摸屏幕。
4, 声明应用需要链接的 API 库（Android 框架 API 除外），如 Google 地图库。


声明组件
<?xml version="1.0" encoding="utf-8"?>
<manifest ... >
    <application android:icon="@drawable/app_icon.png" ... >
        <activity android:name="com.example.project.ExampleActivity"
                  android:label="@string/example_label" ... >
        </activity>
        ...
    </application>
</manifest>



必须使用以下元素声明所有应用组件：

Activity 的 <activity> 元素。
服务的 <service> 元素。
广播接收器的 <receiver> 元素。
内容提供程序的 <provider> 元素。

如果未在清单文件中声明源代码中包含的 Activity、服务和内容提供程序，则这些组件对系统不可见，因此也永远不会运行。
例外情况，您可以 BroadcastReceiver 对象的形式，在清单中声明或在代码中动态创建广播接收器；以及通过调用 registerReceiver()，在系统中注册广播接收器。


Intent 过滤器
您可以将 <intent-filter> 元素作为组件声明元素的子项进行添加，从而为您的组件声明 Intent 过滤器。
<manifest ... >
    ...
    <application ... >
        <activity android:name="com.example.project.ComposeEmailActivity">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <data android:type="*/*" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
    </application>
</manifest>


声明应用要求
<manifest ... >
    <uses-feature android:name="android.hardware.camera.any"
                  android:required="true" />
    <uses-sdk android:minSdkVersion="7" android:targetSdkVersion="19" />
    ...
</manifest>


